{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FKV\\\\Desktop\\\\CoinFlip-git-amirdaher\\\\coinflip\\\\src\\\\App.js\";\nimport React, { Component, useImperativeHandle } from 'react';\nimport logo from './logo512.png';\nimport './App.css';\nimport Popup from './components/popup.js';\nimport Loginpopup from './components/loginpopup';\nimport 'whatwg-fetch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.register_user = async () => {\n      // data innehåller informationen som behövs i header\n      const data = {\n        username: `${this.state.username}`,\n        password: `${this.state.password}`\n      }; // gör förfrågningen med fetch functionen.\n\n      const response = await fetch('/register_user', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }); // Här kollar vi på svaret som vi får av servern\n\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        // Någon har gått fel\n        throw Error(body.message);\n      } //returnerar svar från backend vilket är användarnamnet\n\n\n      return this.setState({\n        loggedInUsername: body\n      });\n    };\n\n    this.state = {\n      showPopup: false,\n      isLoggedin: false,\n      loginPage: false,\n      passwordsMatch: null,\n      username: '',\n      password: '',\n      checkpassword: '',\n      message: \"Pass don't match\",\n      loggedInUsername: ''\n    };\n  }\n\n  handleOnChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  changeLogin() {\n    this.setState({\n      Login: !this.state.loginPage\n    });\n  }\n\n  handleLogin() {}\n\n  comparePassword() {\n    if (this.state.password !== this.state.checkpassword) {\n      this.setState({\n        passwordsMatch: false\n      }); //alert(this.props.passwordsMatch)\n\n      return false; // The form won't submit\n    } else this.setState({\n      passwordsMatch: true\n    });\n\n    this.register_user();\n    return true; // The form will submit\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n      Login: this.state.LoginPage\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.togglePopup.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Login/register\"), this.state.showPopup && !this.state.Login ? React.createElement(Popup, {\n      text: \"Registration\",\n      closePopup: this.togglePopup.bind(this),\n      handleOnChange: this.handleOnChange.bind(this),\n      changeLogin: this.changeLogin.bind(this),\n      handleSubmit: this.comparePassword.bind(this),\n      message: this.state.passwordsMatch === false && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Passwords don't match!\") || this.state.passwordsMatch === true && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Registered!\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : null, this.state.Login && this.state.showPopup ? React.createElement(Loginpopup, {\n      text: \"Login\",\n      closeLoginPopup: this.togglePopup.bind(this),\n      handleOnChange: this.handleOnChange.bind(this),\n      handleLoginSubmit: this.handleLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/FKV/Desktop/CoinFlip-git-amirdaher/coinflip/src/App.js"],"names":["React","Component","useImperativeHandle","logo","Popup","Loginpopup","App","constructor","props","register_user","data","username","state","password","response","fetch","method","body","JSON","stringify","headers","json","status","Error","message","setState","loggedInUsername","showPopup","isLoggedin","loginPage","passwordsMatch","checkpassword","handleOnChange","event","target","name","value","changeLogin","Login","handleLogin","comparePassword","togglePopup","LoginPage","render","bind"],"mappings":"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","sourcesContent":["import React, {Component, useImperativeHandle} from 'react';\nimport logo from './logo512.png';\nimport './App.css';\nimport Popup from './components/popup.js';\nimport Loginpopup from './components/loginpopup';\nimport 'whatwg-fetch'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      showPopup: false,\n\n      isLoggedin: false,\n      loginPage: false,\n      passwordsMatch: null,\n       username: '',\n       password:  '',\n       checkpassword: '',\n       message: \"Pass don't match\",\n       loggedInUsername: ''\n      };\n    \n     \n   \n    }\n\n    handleOnChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n  })\n\n}\n\nchangeLogin() {\n  this.setState({\n    Login: !this.state.loginPage\n  });\n \n  \n}\n\n  handleLogin() {\n\n\n  }\n\n    comparePassword() { \n      if(this.state.password !== this.state.checkpassword){\n\n        this.setState({passwordsMatch: false})\n       \n         //alert(this.props.passwordsMatch)\n           return false; // The form won't submit\n       }\n       \n       else \n       this.setState({passwordsMatch: true})\n       this.register_user()\n       return  true; // The form will submit\n    }\n\n  \n    \n\n    togglePopup() {\n     this.setState({\n       showPopup: !this.state.showPopup,\n       Login: this.state.LoginPage\n     });\n   }\n\n   register_user = async () => {\n    // data innehåller informationen som behövs i header\n    const data = {username: `${this.state.username}`, password: `${this.state.password}`};\n\n    // gör förfrågningen med fetch functionen.\n    const response = await fetch('/register_user', {\n        method: 'POST',\n        body: JSON.stringify(data), \n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}\n    });\n\n    // Här kollar vi på svaret som vi får av servern\n    const body = await response.json();\n    if (response.status !== 200) {\n        // Någon har gått fel\n        throw Error(body.message)\n    }\n    //returnerar svar från backend vilket är användarnamnet\n\n    return this.setState({loggedInUsername: body})\n}\n\n\n  \n \n  \n    render() {\n      return (\n        <div>\n        \n<header className=\"App-header\">\n        \n\n         \n         <button onClick={this.togglePopup.bind(this)}>Login/register</button>\n  \n         {this.state.showPopup && !this.state.Login ?\n           <Popup\n            text='Registration'\n            closePopup={this.togglePopup.bind(this)}\n            handleOnChange={this.handleOnChange.bind(this)}\n            changeLogin={this.changeLogin.bind(this)}\n\n            handleSubmit={this.comparePassword.bind(this)}\n            message={this.state.passwordsMatch === false && <div>Passwords don't match!</div>\n             || this.state.passwordsMatch === true && <div>Registered!</div>}\n\n           />\n           : null\n         }\n\n         {this.state.Login && this.state.showPopup ?\n         <Loginpopup\n          text='Login'\n          closeLoginPopup={this.togglePopup.bind(this)}\n          handleOnChange={this.handleOnChange.bind(this)}\n          handleLoginSubmit={this.handleLogin.bind(this)}\n         />\n         : null\n\n         }\n\n         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n         </header>\n        </div>\n\n       \n  \n      );\n    }\n  }\n\n\n \n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}