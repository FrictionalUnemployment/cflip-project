Denna text förklarar hur mak kommunicerar med backend servern
För att kommunicera med backend behövs 'whatwg-fetch' för att sätta body taggen
App.js måste allstå innehålla en rad som står:
    import 'whatwg-fetch'
Man behöver även skriva npm install whatwg-fetch för att installera det


POST /register_user
    Detta används för att registrera nya användare.

    Returnerar användarnamnet om registering lyckades

    För att registrera nya användare behöver man ange användernamn och lösenord
    detta görs genom att lägga in den informationen i body.
        Body ska vara en json sträng som innehåller följande:
            {usename: 'ny användare', password: 'hemlight lösenord}
        
    exepmel kod för att registrera ny användare på klienten:
        Denna kod skapar en function registerUser som returnerar användarnamnet

        register_user = async () => {
            // data innehåller informationen som behövs i header
            const data = {username: `${username}`, password: `${password}`};

            // gör förfrågningen med fetch functionen.
            const response = await fetch('/register_user', {
                method: 'POST',
                body: JSON.stringify(data), // Gör om data till en json sträng
                // jag fick det inte att fungera utan headers, du kan pröva
                headers: {
                    'Accept': 'application/json', 'Content-Type': application/json'
                }
            });

            // Här kollar vi på svaret som vi får av servern
            const body = await response.json();
            if (response.status !== 200) {
                // Någon har gått fel
                throw Error(body.message)
            }
            //returnerar svar från backend vilket är användarnamnet
            return body
        }



POST /login
    Detta används för att logga in.
    
    Returnerar användarnamnet om inloggning lyckades, annars false.

    Ange användarnamn och lösenord på samma sätt
    som man gör när man registrerar. Allstå med en body som innehåller en
    json sträng:
        {username: användare, password: lösenord}

    exempel kod för /login ser nästan likadan ut som för /register_user



GET /coin
    Detta används för att få status på coin. Denna körs många gånger per
    sekund för att hålla clienten uppdaterad.

    Returnerar 
        {timeleft: 'tid kvar i ms', winner: [[heads/tails][alla vinnare]]}

    Om det finns tid kvar är winner null. När tiden är slut (under 100 ms)
    blir timeleft null och winner en lista med längd 2. winner[0] är
    heads eller tails, winner[1] är en lista av alla vinnare.

    exempel kod för klienten:
        Denna funktion returnerar {timeleft, winner} och bör
        kallas många gånger per sekund för att hålla klienten uppdaterad
        callCoinApi = async () => {
            const response = await fetch('/coin');
            const body = await response.json();

            if (response.status !== 200) {
                throw Error(body.message)
            }
            return body;
        }

